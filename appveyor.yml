version: 1.0.{build}
install:
  - nuget restore
configuration: Release
platform: Any CPU
environment:
  COVERALLS_REPO_TOKEN:
    secure: 2D6Q22+GyTngkC0xomWycgK0kXY4FepSad7Ep/R3R8xha+xEPisCKBISSLCq0Sl0
  CoverityProjectToken:
    secure: pUUrynbyxCRpsAgGdKBVYDZCilwBmaWQ1Jg+rg5znr0=
  CoverityNotificationEmail:
    secure: m/ox72HU97EeJExWEFWx+0M9uov0cydn6E8mSaQzsQE=
build:
  project: HtmlSanitizer.sln
  verbosity: minimal
after_build:
  - ps: |
      if ($env:CoverityProjectToken)
      {
        cov-build.exe --dir cov-int msbuild /t:Rebuild HtmlSanitizer.sln
        nuget.exe install PublishCoverity -ExcludeVersion
        PublishCoverity\tools\PublishCoverity.exe compress -o coverity.zip -i cov-int
        PublishCoverity\tools\PublishCoverity.exe publish -t "$env:CoverityProjectToken" -e "$env:CoverityNotificationEmail" -r "$env:APPVEYOR_REPO_NAME" -z coverity.zip -d "AppVeyor $env:APPVEYOR_BUILD_VERSION" --codeVersion "$env:APPVEYOR_REPO_COMMIT"
      }
after_test:
  - ps: |
      if ($env:COVERALLS_REPO_TOKEN)
      {
        nuget.exe install OpenCover -ExcludeVersion
        nuget.exe install coveralls.io -ExcludeVersion
        nuget.exe install NUnit.Runners -ExcludeVersion
        OpenCover\tools\OpenCover.Console.exe -register:user -filter:"+[*]*" -target:"NUnit.Runners\tools\nunit-console.exe" "-targetargs:/noshadow /domain:single HtmlSanitizer.Tests\bin\release\HtmlSanitizer.Tests.dll" -output:coverage.xml
        coveralls.io\tools\coveralls.net.exe --opencover coverage.xml
      }
